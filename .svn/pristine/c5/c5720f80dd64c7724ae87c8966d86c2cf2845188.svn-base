package device;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

import ui.RefreshUICallback;

public class AdbManager {
	private RefreshUICallback callback;

	public AdbManager(RefreshUICallback callback) {
		this.callback = callback;
	}

	public void runCommand(String command) {
		callback.append(exeCommand(command));
	}

	public String exeCommand(String command) {
		StringBuilder result = new StringBuilder();

		BufferedReader bufrIn = null;
		BufferedReader bufrError = null;
		String line = null;
		InputStream is = null;
		InputStreamReader isReader = null;
		try {
			Process proc = Runtime.getRuntime().exec(command);
			// 方法阻塞, 等待命令执行完成（成功会返回0）

			// 获取命令执行结果, 有两个结果: 正常的输出 和 错误的输出（PS: 子进程的输出就是主进程的输入）
			// bufrIn = new BufferedReader(new InputStreamReader(proc.getInputStream(),
			// "UTF-8"));
			bufrError = new BufferedReader(new InputStreamReader(proc.getErrorStream(), "GBK"));

			// 读取输出
			/*
			 * while ((line = bufrIn.readLine()) != null) {
			 * result.append(line).append('\n'); }
			 */

			while ((line = bufrError.readLine()) != null) {
				result.append(line).append('\n');
			}
		} catch (Exception e) {
			return result.toString();
		} finally {
			if (isReader != null) {
				try {
					isReader.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
				}
			}

			if (is != null) {
				try {
					is.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
				}
			}

			if (bufrIn != null) {
				try {
					bufrIn.close();
				} catch (IOException e) {
					// TODO
				}
			}
			if (bufrError != null) {
				try {
					bufrError.close();
				} catch (IOException e) {
					// TODO
				}
			}
		}
		return "-------successed !" + command + "\n" + result.toString();
	}

}
